class Key:
#start is a string (the first note), tone is a string either 'major' or 'minor'

    #notes = ['c', 'c#', 'd', 'd#', 'e', 'f', 'f#', 'g', 'g#', 'a', 'a#', 'b']
 
    def __init__(self, start, tone):
        notes = ['c', 'c#', 'd', 'd#', 'e', 'f', 'f#', 'g', 'g#', 'a', 'a#', 'b']
        scale = []
        self.start = start
        self.tone = tone
        start = notes.index(start)

        if tone == 'major':
            scale.append(notes[start % len(notes)])
            scale.append(notes[(start + 2) % len(notes)])
            scale.append(notes[(start + 4) % len(notes)])
            scale.append(notes[(start + 5) % len(notes)])
            scale.append(notes[(start + 7) % len(notes)])
            scale.append(notes[(start + 9) % len(notes)])
            scale.append(notes[(start + 11) % len(notes)])
            scale.append(notes[(start + 12) % len(notes)])

        elif tone == 'minor':
            scale.append(notes[start % len(notes)])
            scale.append(notes[(start + 2) % len(notes)])
            scale.append(notes[(start + 3) % len(notes)])
            scale.append(notes[(start + 5) % len(notes)])
            scale.append(notes[(start + 7) % len(notes)])
            scale.append(notes[(start + 8) % len(notes)])
            scale.append(notes[(start + 10) % len(notes)])
            scale.append(notes[(start + 12) % len(notes)])

       # return scale
        self.scale = scale

        self.root = [scale[0], scale[2], scale[4]]
        self.third = [scale[2], scale[4], scale[6]]
        self.fifth = [scale[4], scale[6], scale[0]]
       # return root, third, fifth